"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/eventsource-parser";
exports.ids = ["vendor-chunks/eventsource-parser"];
exports.modules = {

/***/ "(rsc)/./node_modules/eventsource-parser/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/eventsource-parser/dist/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ParseError: () => (/* binding */ ParseError),\n/* harmony export */   createParser: () => (/* binding */ createParser)\n/* harmony export */ });\nclass ParseError extends Error {\n  constructor(message, options) {\n    super(message), this.name = \"ParseError\", this.type = options.type, this.field = options.field, this.value = options.value, this.line = options.line;\n  }\n}\nfunction noop(_arg) {\n}\nfunction createParser(callbacks) {\n  if (typeof callbacks == \"function\")\n    throw new TypeError(\n      \"`callbacks` must be an object, got a function instead. Did you mean `{onEvent: fn}`?\"\n    );\n  const { onEvent = noop, onError = noop, onRetry = noop, onComment } = callbacks;\n  let incompleteLine = \"\", isFirstChunk = !0, id, data = \"\", eventType = \"\";\n  function feed(newChunk) {\n    const chunk = isFirstChunk ? newChunk.replace(/^\\xEF\\xBB\\xBF/, \"\") : newChunk, [complete, incomplete] = splitLines(`${incompleteLine}${chunk}`);\n    for (const line of complete)\n      parseLine(line);\n    incompleteLine = incomplete, isFirstChunk = !1;\n  }\n  function parseLine(line) {\n    if (line === \"\") {\n      dispatchEvent();\n      return;\n    }\n    if (line.startsWith(\":\")) {\n      onComment && onComment(line.slice(line.startsWith(\": \") ? 2 : 1));\n      return;\n    }\n    const fieldSeparatorIndex = line.indexOf(\":\");\n    if (fieldSeparatorIndex !== -1) {\n      const field = line.slice(0, fieldSeparatorIndex), offset = line[fieldSeparatorIndex + 1] === \" \" ? 2 : 1, value = line.slice(fieldSeparatorIndex + offset);\n      processField(field, value, line);\n      return;\n    }\n    processField(line, \"\", line);\n  }\n  function processField(field, value, line) {\n    switch (field) {\n      case \"event\":\n        eventType = value;\n        break;\n      case \"data\":\n        data = `${data}${value}\n`;\n        break;\n      case \"id\":\n        id = value.includes(\"\\0\") ? void 0 : value;\n        break;\n      case \"retry\":\n        /^\\d+$/.test(value) ? onRetry(parseInt(value, 10)) : onError(\n          new ParseError(`Invalid \\`retry\\` value: \"${value}\"`, {\n            type: \"invalid-retry\",\n            value,\n            line\n          })\n        );\n        break;\n      default:\n        onError(\n          new ParseError(\n            `Unknown field \"${field.length > 20 ? `${field.slice(0, 20)}\\u2026` : field}\"`,\n            { type: \"unknown-field\", field, value, line }\n          )\n        );\n        break;\n    }\n  }\n  function dispatchEvent() {\n    data.length > 0 && onEvent({\n      id,\n      event: eventType || void 0,\n      // If the data buffer's last character is a U+000A LINE FEED (LF) character,\n      // then remove the last character from the data buffer.\n      data: data.endsWith(`\n`) ? data.slice(0, -1) : data\n    }), id = void 0, data = \"\", eventType = \"\";\n  }\n  function reset(options = {}) {\n    incompleteLine && options.consume && parseLine(incompleteLine), isFirstChunk = !0, id = void 0, data = \"\", eventType = \"\", incompleteLine = \"\";\n  }\n  return { feed, reset };\n}\nfunction splitLines(chunk) {\n  const lines = [];\n  let incompleteLine = \"\", searchIndex = 0;\n  for (; searchIndex < chunk.length; ) {\n    const crIndex = chunk.indexOf(\"\\r\", searchIndex), lfIndex = chunk.indexOf(`\n`, searchIndex);\n    let lineEnd = -1;\n    if (crIndex !== -1 && lfIndex !== -1 ? lineEnd = Math.min(crIndex, lfIndex) : crIndex !== -1 ? lineEnd = crIndex : lfIndex !== -1 && (lineEnd = lfIndex), lineEnd === -1) {\n      incompleteLine = chunk.slice(searchIndex);\n      break;\n    } else {\n      const line = chunk.slice(searchIndex, lineEnd);\n      lines.push(line), searchIndex = lineEnd + 1, chunk[searchIndex - 1] === \"\\r\" && chunk[searchIndex] === `\n` && searchIndex++;\n    }\n  }\n  return [lines, incompleteLine];\n}\n\n//# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZXZlbnRzb3VyY2UtcGFyc2VyL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZFQUE2RSxZQUFZO0FBQ3pGO0FBQ0EsVUFBVSw0REFBNEQ7QUFDdEU7QUFDQTtBQUNBLDBIQUEwSCxlQUFlLEVBQUUsTUFBTTtBQUNqSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsS0FBSyxFQUFFO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0RBQXNELE1BQU07QUFDNUQ7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsdUJBQXVCLG1CQUFtQixnQkFBZ0I7QUFDeEYsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLDRCQUE0QjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9hbGJlcnRvL0RvY3VtZW50b3MvRGVzZW52b2x2aW1lbnRvIFdlYi9Sb2NrZXRzZWF0L1RyaWdnZXJEZXYvbm9kZV9tb2R1bGVzL2V2ZW50c291cmNlLXBhcnNlci9kaXN0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFBhcnNlRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIG9wdGlvbnMpIHtcbiAgICBzdXBlcihtZXNzYWdlKSwgdGhpcy5uYW1lID0gXCJQYXJzZUVycm9yXCIsIHRoaXMudHlwZSA9IG9wdGlvbnMudHlwZSwgdGhpcy5maWVsZCA9IG9wdGlvbnMuZmllbGQsIHRoaXMudmFsdWUgPSBvcHRpb25zLnZhbHVlLCB0aGlzLmxpbmUgPSBvcHRpb25zLmxpbmU7XG4gIH1cbn1cbmZ1bmN0aW9uIG5vb3AoX2FyZykge1xufVxuZnVuY3Rpb24gY3JlYXRlUGFyc2VyKGNhbGxiYWNrcykge1xuICBpZiAodHlwZW9mIGNhbGxiYWNrcyA9PSBcImZ1bmN0aW9uXCIpXG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcbiAgICAgIFwiYGNhbGxiYWNrc2AgbXVzdCBiZSBhbiBvYmplY3QsIGdvdCBhIGZ1bmN0aW9uIGluc3RlYWQuIERpZCB5b3UgbWVhbiBge29uRXZlbnQ6IGZufWA/XCJcbiAgICApO1xuICBjb25zdCB7IG9uRXZlbnQgPSBub29wLCBvbkVycm9yID0gbm9vcCwgb25SZXRyeSA9IG5vb3AsIG9uQ29tbWVudCB9ID0gY2FsbGJhY2tzO1xuICBsZXQgaW5jb21wbGV0ZUxpbmUgPSBcIlwiLCBpc0ZpcnN0Q2h1bmsgPSAhMCwgaWQsIGRhdGEgPSBcIlwiLCBldmVudFR5cGUgPSBcIlwiO1xuICBmdW5jdGlvbiBmZWVkKG5ld0NodW5rKSB7XG4gICAgY29uc3QgY2h1bmsgPSBpc0ZpcnN0Q2h1bmsgPyBuZXdDaHVuay5yZXBsYWNlKC9eXFx4RUZcXHhCQlxceEJGLywgXCJcIikgOiBuZXdDaHVuaywgW2NvbXBsZXRlLCBpbmNvbXBsZXRlXSA9IHNwbGl0TGluZXMoYCR7aW5jb21wbGV0ZUxpbmV9JHtjaHVua31gKTtcbiAgICBmb3IgKGNvbnN0IGxpbmUgb2YgY29tcGxldGUpXG4gICAgICBwYXJzZUxpbmUobGluZSk7XG4gICAgaW5jb21wbGV0ZUxpbmUgPSBpbmNvbXBsZXRlLCBpc0ZpcnN0Q2h1bmsgPSAhMTtcbiAgfVxuICBmdW5jdGlvbiBwYXJzZUxpbmUobGluZSkge1xuICAgIGlmIChsaW5lID09PSBcIlwiKSB7XG4gICAgICBkaXNwYXRjaEV2ZW50KCk7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIGlmIChsaW5lLnN0YXJ0c1dpdGgoXCI6XCIpKSB7XG4gICAgICBvbkNvbW1lbnQgJiYgb25Db21tZW50KGxpbmUuc2xpY2UobGluZS5zdGFydHNXaXRoKFwiOiBcIikgPyAyIDogMSkpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBjb25zdCBmaWVsZFNlcGFyYXRvckluZGV4ID0gbGluZS5pbmRleE9mKFwiOlwiKTtcbiAgICBpZiAoZmllbGRTZXBhcmF0b3JJbmRleCAhPT0gLTEpIHtcbiAgICAgIGNvbnN0IGZpZWxkID0gbGluZS5zbGljZSgwLCBmaWVsZFNlcGFyYXRvckluZGV4KSwgb2Zmc2V0ID0gbGluZVtmaWVsZFNlcGFyYXRvckluZGV4ICsgMV0gPT09IFwiIFwiID8gMiA6IDEsIHZhbHVlID0gbGluZS5zbGljZShmaWVsZFNlcGFyYXRvckluZGV4ICsgb2Zmc2V0KTtcbiAgICAgIHByb2Nlc3NGaWVsZChmaWVsZCwgdmFsdWUsIGxpbmUpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBwcm9jZXNzRmllbGQobGluZSwgXCJcIiwgbGluZSk7XG4gIH1cbiAgZnVuY3Rpb24gcHJvY2Vzc0ZpZWxkKGZpZWxkLCB2YWx1ZSwgbGluZSkge1xuICAgIHN3aXRjaCAoZmllbGQpIHtcbiAgICAgIGNhc2UgXCJldmVudFwiOlxuICAgICAgICBldmVudFR5cGUgPSB2YWx1ZTtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiZGF0YVwiOlxuICAgICAgICBkYXRhID0gYCR7ZGF0YX0ke3ZhbHVlfVxuYDtcbiAgICAgICAgYnJlYWs7XG4gICAgICBjYXNlIFwiaWRcIjpcbiAgICAgICAgaWQgPSB2YWx1ZS5pbmNsdWRlcyhcIlxcMFwiKSA/IHZvaWQgMCA6IHZhbHVlO1xuICAgICAgICBicmVhaztcbiAgICAgIGNhc2UgXCJyZXRyeVwiOlxuICAgICAgICAvXlxcZCskLy50ZXN0KHZhbHVlKSA/IG9uUmV0cnkocGFyc2VJbnQodmFsdWUsIDEwKSkgOiBvbkVycm9yKFxuICAgICAgICAgIG5ldyBQYXJzZUVycm9yKGBJbnZhbGlkIFxcYHJldHJ5XFxgIHZhbHVlOiBcIiR7dmFsdWV9XCJgLCB7XG4gICAgICAgICAgICB0eXBlOiBcImludmFsaWQtcmV0cnlcIixcbiAgICAgICAgICAgIHZhbHVlLFxuICAgICAgICAgICAgbGluZVxuICAgICAgICAgIH0pXG4gICAgICAgICk7XG4gICAgICAgIGJyZWFrO1xuICAgICAgZGVmYXVsdDpcbiAgICAgICAgb25FcnJvcihcbiAgICAgICAgICBuZXcgUGFyc2VFcnJvcihcbiAgICAgICAgICAgIGBVbmtub3duIGZpZWxkIFwiJHtmaWVsZC5sZW5ndGggPiAyMCA/IGAke2ZpZWxkLnNsaWNlKDAsIDIwKX1cXHUyMDI2YCA6IGZpZWxkfVwiYCxcbiAgICAgICAgICAgIHsgdHlwZTogXCJ1bmtub3duLWZpZWxkXCIsIGZpZWxkLCB2YWx1ZSwgbGluZSB9XG4gICAgICAgICAgKVxuICAgICAgICApO1xuICAgICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgZnVuY3Rpb24gZGlzcGF0Y2hFdmVudCgpIHtcbiAgICBkYXRhLmxlbmd0aCA+IDAgJiYgb25FdmVudCh7XG4gICAgICBpZCxcbiAgICAgIGV2ZW50OiBldmVudFR5cGUgfHwgdm9pZCAwLFxuICAgICAgLy8gSWYgdGhlIGRhdGEgYnVmZmVyJ3MgbGFzdCBjaGFyYWN0ZXIgaXMgYSBVKzAwMEEgTElORSBGRUVEIChMRikgY2hhcmFjdGVyLFxuICAgICAgLy8gdGhlbiByZW1vdmUgdGhlIGxhc3QgY2hhcmFjdGVyIGZyb20gdGhlIGRhdGEgYnVmZmVyLlxuICAgICAgZGF0YTogZGF0YS5lbmRzV2l0aChgXG5gKSA/IGRhdGEuc2xpY2UoMCwgLTEpIDogZGF0YVxuICAgIH0pLCBpZCA9IHZvaWQgMCwgZGF0YSA9IFwiXCIsIGV2ZW50VHlwZSA9IFwiXCI7XG4gIH1cbiAgZnVuY3Rpb24gcmVzZXQob3B0aW9ucyA9IHt9KSB7XG4gICAgaW5jb21wbGV0ZUxpbmUgJiYgb3B0aW9ucy5jb25zdW1lICYmIHBhcnNlTGluZShpbmNvbXBsZXRlTGluZSksIGlzRmlyc3RDaHVuayA9ICEwLCBpZCA9IHZvaWQgMCwgZGF0YSA9IFwiXCIsIGV2ZW50VHlwZSA9IFwiXCIsIGluY29tcGxldGVMaW5lID0gXCJcIjtcbiAgfVxuICByZXR1cm4geyBmZWVkLCByZXNldCB9O1xufVxuZnVuY3Rpb24gc3BsaXRMaW5lcyhjaHVuaykge1xuICBjb25zdCBsaW5lcyA9IFtdO1xuICBsZXQgaW5jb21wbGV0ZUxpbmUgPSBcIlwiLCBzZWFyY2hJbmRleCA9IDA7XG4gIGZvciAoOyBzZWFyY2hJbmRleCA8IGNodW5rLmxlbmd0aDsgKSB7XG4gICAgY29uc3QgY3JJbmRleCA9IGNodW5rLmluZGV4T2YoXCJcXHJcIiwgc2VhcmNoSW5kZXgpLCBsZkluZGV4ID0gY2h1bmsuaW5kZXhPZihgXG5gLCBzZWFyY2hJbmRleCk7XG4gICAgbGV0IGxpbmVFbmQgPSAtMTtcbiAgICBpZiAoY3JJbmRleCAhPT0gLTEgJiYgbGZJbmRleCAhPT0gLTEgPyBsaW5lRW5kID0gTWF0aC5taW4oY3JJbmRleCwgbGZJbmRleCkgOiBjckluZGV4ICE9PSAtMSA/IGxpbmVFbmQgPSBjckluZGV4IDogbGZJbmRleCAhPT0gLTEgJiYgKGxpbmVFbmQgPSBsZkluZGV4KSwgbGluZUVuZCA9PT0gLTEpIHtcbiAgICAgIGluY29tcGxldGVMaW5lID0gY2h1bmsuc2xpY2Uoc2VhcmNoSW5kZXgpO1xuICAgICAgYnJlYWs7XG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnN0IGxpbmUgPSBjaHVuay5zbGljZShzZWFyY2hJbmRleCwgbGluZUVuZCk7XG4gICAgICBsaW5lcy5wdXNoKGxpbmUpLCBzZWFyY2hJbmRleCA9IGxpbmVFbmQgKyAxLCBjaHVua1tzZWFyY2hJbmRleCAtIDFdID09PSBcIlxcclwiICYmIGNodW5rW3NlYXJjaEluZGV4XSA9PT0gYFxuYCAmJiBzZWFyY2hJbmRleCsrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gW2xpbmVzLCBpbmNvbXBsZXRlTGluZV07XG59XG5leHBvcnQge1xuICBQYXJzZUVycm9yLFxuICBjcmVhdGVQYXJzZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXBcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/eventsource-parser/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/eventsource-parser/dist/stream.js":
/*!********************************************************!*\
  !*** ./node_modules/eventsource-parser/dist/stream.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EventSourceParserStream: () => (/* binding */ EventSourceParserStream),\n/* harmony export */   ParseError: () => (/* reexport safe */ _index_js__WEBPACK_IMPORTED_MODULE_0__.ParseError)\n/* harmony export */ });\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"(rsc)/./node_modules/eventsource-parser/dist/index.js\");\n\n\nclass EventSourceParserStream extends TransformStream {\n  constructor({ onError, onRetry, onComment } = {}) {\n    let parser;\n    super({\n      start(controller) {\n        parser = (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.createParser)({\n          onEvent: (event) => {\n            controller.enqueue(event);\n          },\n          onError(error) {\n            onError === \"terminate\" ? controller.error(error) : typeof onError == \"function\" && onError(error);\n          },\n          onRetry,\n          onComment\n        });\n      },\n      transform(chunk) {\n        parser.feed(chunk);\n      }\n    });\n  }\n}\n\n//# sourceMappingURL=stream.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvZXZlbnRzb3VyY2UtcGFyc2VyL2Rpc3Qvc3RyZWFtLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQztBQUNGO0FBQ3hDO0FBQ0EsZ0JBQWdCLDhCQUE4QixJQUFJO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix1REFBWTtBQUM3QjtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFJRTtBQUNGIiwic291cmNlcyI6WyIvaG9tZS9hbGJlcnRvL0RvY3VtZW50b3MvRGVzZW52b2x2aW1lbnRvIFdlYi9Sb2NrZXRzZWF0L1RyaWdnZXJEZXYvbm9kZV9tb2R1bGVzL2V2ZW50c291cmNlLXBhcnNlci9kaXN0L3N0cmVhbS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVQYXJzZXIgfSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuaW1wb3J0IHsgUGFyc2VFcnJvciB9IGZyb20gXCIuL2luZGV4LmpzXCI7XG5jbGFzcyBFdmVudFNvdXJjZVBhcnNlclN0cmVhbSBleHRlbmRzIFRyYW5zZm9ybVN0cmVhbSB7XG4gIGNvbnN0cnVjdG9yKHsgb25FcnJvciwgb25SZXRyeSwgb25Db21tZW50IH0gPSB7fSkge1xuICAgIGxldCBwYXJzZXI7XG4gICAgc3VwZXIoe1xuICAgICAgc3RhcnQoY29udHJvbGxlcikge1xuICAgICAgICBwYXJzZXIgPSBjcmVhdGVQYXJzZXIoe1xuICAgICAgICAgIG9uRXZlbnQ6IChldmVudCkgPT4ge1xuICAgICAgICAgICAgY29udHJvbGxlci5lbnF1ZXVlKGV2ZW50KTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIG9uRXJyb3IoZXJyb3IpIHtcbiAgICAgICAgICAgIG9uRXJyb3IgPT09IFwidGVybWluYXRlXCIgPyBjb250cm9sbGVyLmVycm9yKGVycm9yKSA6IHR5cGVvZiBvbkVycm9yID09IFwiZnVuY3Rpb25cIiAmJiBvbkVycm9yKGVycm9yKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIG9uUmV0cnksXG4gICAgICAgICAgb25Db21tZW50XG4gICAgICAgIH0pO1xuICAgICAgfSxcbiAgICAgIHRyYW5zZm9ybShjaHVuaykge1xuICAgICAgICBwYXJzZXIuZmVlZChjaHVuayk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbn1cbmV4cG9ydCB7XG4gIEV2ZW50U291cmNlUGFyc2VyU3RyZWFtLFxuICBQYXJzZUVycm9yXG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9c3RyZWFtLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/eventsource-parser/dist/stream.js\n");

/***/ })

};
;